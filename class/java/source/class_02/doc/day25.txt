# day25

PrintStream
==> byte 기반
	필터계열 스트림이다. 
	사용자의 편의성 + 기능 향상을 동시에 만들어 놓은 보조스트림
	
	기능
		1. 내부적으로 BufferedOutputStream과 연결해 놓았다.
		2. 사용자의 편의를 위해서 자바의 데이터형태를 그대로 출력하도록 해 놓았다. 
		3. 외부장치(파일) 와 직접 연결하도록 해 놓았다. 
			==> 내부적으로 타겟 스트림을 연결해서 사용하도록 되어 있다. 
			
	참고 ]
		한 쌍을 이루는 입력쪽 스트림이 존재하지 않는다.  
		
----------------------------------------------------------------------------------------------------------
char 단위의 스트림
==> 한번 입출력할 때 2바이트 단위로 입출력할수 있는 스트림을 말한다.
	주의사항 ]
		기계어 상태의 내용은 절대로 char 단위의 입출력을 사용하면 안된다.
		*** 오직 Text 에만 사용하여야 한다.
		기계어 문서는 반드시 byte 단위의 입출력을 사용해야 한다.
		왜냐면 
			2바이트가 1char가 될때 바이트의 순서가 뒤집어 질 수 있다. 
			
			예 ]
				'가'	ㄱ : 0011	ㅏ : 0101
				
				==>		00110101이될꺼같지만 ----x
						01010011 이렇게 합쳐진다--o
----------------------------------------------------------------------------------------------------------

1. FileWriter / FileReader
writer reader로 이름이 되어 있는 얘들은 줴다 문자 단위
==> 파일에 연결된 타겟(기본) 스트림이다.
	단위는 char 단위가 된다.
	
	내부적으로 char 단위로 처리한다는 것만 다를뿐, 
	사용자 입장에서는 byte단위와 별 차이가 없다.
	
2. BufferedReader / BufferedWriter
	==> 중간에 버퍼 기능을 추가해서 스트림의 성능 향상을 위한 보조 스트림이다.
	
	참고 ]
		핵심함수 - char의 기본 함수에는 문자열을 읽을 수 있는 함수가 없다.
		
		readLine() ==> 한줄 단위로 문자열을 그대로 읽어서 사용할 수 있는 함수.
		
		참고 ] 
			이 함수를 사용할 때 주의사항
			이 함수는 줄 단위로 한줄식 읽는 함수이다.
			==> 줄 단위를 발견하면(\r\n) 그곳에서 읽는 것을 멈춘다. 줄바꿈을 포함시키지않는다
			
3.PrintWriter
	==> byte 기반의 PrintStream 처럼
		필터계열의 스트림이면서
			1. 버퍼의 기능을 가지고 있다.
			2. 직접 외부장치에 연결할 수 있다. 
			3. 사용자의 편의를 도모한다. (자바의 데이터 타입을 그대로 출력한다.)
			4. 다른 byte[]의 스트림과도 연결할 수 있다.
			
		참고 ]
			스트림을 연결할 때 주의사항
				1. 반드시 같은 방향끼리만 연결할 수 있다.
				2. 반드시 같은 크기 끼리만 연결할 수 있다.
			
				예 ]
					FileInputStream fin = new FileInputStream(file);
					bufferedReader br = new BufferedReader(fin);----------------------x
					
				참고 스트림 ] 
				
					InputStreamReader / OutputStreamWriter
					==> 크기가 다른 두개의 스트림을 연결할 때 사용하는 보조(필터) 스트림
					예]
					
		바이트기반		FileInputStream fin = new FileInputStream(file);
						InputStreamReader isr = new InputStreamReader(fin)
		문자기반 		bufferedReader br = new BufferedReader(isr);--------------------O
		
						FileOutputStream fout = new FileOutputStream(file);
						OUtputStreamWritwer osw =new OutputStreamWriter(fout);
						bu
		참고 ]
		
			타겟이 byte기반이고 필터스트림이 char 기반인 경우에 한해서만 사용하는 필터스트림이다.
			타겟이 char 기반이고 필터가 byte 기반인 경우 사용할 수 없다.
			
			
			
----------------------------------------------------------------------------------------------------------

객체의 직렬화
==> 데이터는 자바의 기본형 이외에도 클래스 전체를 데이터로
	상대방(외부장치)에 입출력할 수 있다. 
	
	===> 이때 함수는 제외되고
		 그 클래스 안에 있는 변수의 내용만 입출력이 된다.
		 
		 이처럼 클래스가 다른 장치에 전달되는 상태를
		 	"직렬화"
		 라고 표현한다
		 
		 참고로 직렬화라고 부르는 이유는
		 클래스에 있는 변수의 내용이 순서대로 입출력된다..
		 라는 의미에서 붙여진 이름이다. 
		 
	*****
	주의사항 ] 
		아무 클래스나 입출력이 되는 것은 아니고 
		해당 클래스가 반드시 직렬화 가능한 클래스 여야 한다.
		==> Serializable (직렬:Serial) 을 상속받는 클래스여야 한다. 
		
	 참고 ] 
	 	직렬화는 변수의 내용만 입출력이 되므로 
	 	네트워크같이 서로 떨어진 경우에는 
	 	양쪽에 같은 클래스가 존재해야 한다. 
	 	(왜냐면 클래스 구조는 전달되지 않고,
	 	 변수의 내용만 전달 되기 때문에 
	 	 양쪽에 모두 같은 클래스의 구조를 가지고 있어야 한다. )
	 	 
	 	 이때 양쪽에 있는 클래스는,
	 	 	클래스 이름 + 패키지 이름
	 	 이 모두 '동일'해야 한다.
	 	 이때 사용하는 보조 스트림
	 	 ObjectInputStream / ObjectOutputStream ------> byte기반 // stream으로 끝났네? 바이트기반
	 	 ==> 주로 네트워크에서 많이 사용하므로
	 	 	Reader/Writer 계열은 없다. (char기반)(문자계열은 없다).
		
----------------------------------------------------------------------------------------------------------
			
	IO 공부해야 할 내용
		필요한 데이터를 파일에 저장 할 수 있고,
		파일에 저장된 내용을 불러오기 할 수 있으면 된다. 
			
----------------------------------------------------------------------------------------------------------



			
----------------------------------------------------------------------------------------------------------