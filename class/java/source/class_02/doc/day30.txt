#day 30

네트워크
	
	용어
		1. IP 주소
			==> 각각의 통신장비(컴퓨터, 스마트폰, 기계장비, ...)에 부여된 주소
				즉, 상대방과 네트워크를 구성하기 위해서 부여된 고유의 장비 주소를 의미
				결론적으로 네트워크 통신을 상대방과 하기 위해서는
			
				필수적으로 상대방의 IP를 알아야 하고
				통신장비의 IP가 반드시 있어야 한다.
				
			IP 주소 확인
			
				cmd 창에서
					-> ipconfig
					
					IPv4
					
				참고 ]
					IP의 종류
					
						IPv4
							==> 4개의 숫자로 구성된 주소
								현재 사용하고 있는 ip 주소
								
						IPv6
							==> 6개의 숫자로 구성된 IP 주소
								미래를 위해서 준비해 놓은 확장된 ip주소
								
			2. PORT 번호
				==> 각각의 프로그램에 부여된 네트워크 번호를 의미
					즉, 같은 IP를 사용하는 컴퓨터에서 실행되는
					여러개의 프로그램을 구분하기 위한 번호
					
					
					즉, 같은 네트워크 장비로 들어오는 데이터의 소유자(프로그램)을 구분히기 위한 번호
					
					포트번호 1 ~ 36,xxx의 중에서 하나를 사용한다. //대충이정도를쓰더라꼭이렇지는않다.
					
					따라서 포트번호가 중복되는 프로그램은 같은 네트워크 장비안에서 실행될 수 없다
					
					결론적으로 개인이 만든 네트워크 프로그램은
					될 수 있으면 3000 ~ 이상의 번호를 사용하는 것을 원장한다.
					
					
			3. 프로토콜(Protocol)
					==> 네트워크에서 상대방과 접속하는 방법이나
						데이터를 주고 받는 방법등...
						네트워크 구성을 원할하게 하기 위해서 준비된 규약(법률)
						==> 프로그램도 아니고 하드웨어도 아닌 규약집
						
					1) HTTP
						==> 인터넷 통신을 위한 프로토콜)					
					2) TCP/IP
						==> 접속형 네트워크를 위한 프로토콜
							상대방과 반드시 접속이 된 상태에서 통신이 이루어지는 방식
							
							장점 : 안정적
							단점 : 통신회선 손실율이 크다.
					3) UDP
						==> 비 접속형 네트워크를 위한 프로토콜
							상대방과 접속되어 있지 않아도 통신이 이루어지는 방식
							
							장점 : 통신회선의 손실율이 적다.
							단점 : 안정적이지 못하다.
					...
					
					
-------------------------------------------------------------------------------------------------------

자바에서 TCP/IP 프로그램 개발

	1. TCP/IP는 두개의 프로그램이 필요하다. 
		왜?
			서로 접속을 해주어야 하기 때문이다.
			
			이중에서 
			접속을 먼저 요청하는 프로그램
			==> Client
			접속을 해오면 받아주는 프로그램
			==> server
					
	Socket
		==> 비유하자면 요청을 하는 전화기
		
			생성방법(생성자함수)
			
				Socket(String host, int port)
				
					String host : 상대방 ip 주소
					int port : 통신할 포트번호
					
					
					특징]
						Socket은 생성하는 순간 생대방과 접속이 이루어진다.
						따라서 접속을 위한 다른 조치는 하지 않아도 된다.
									
	ServerSocket
		==> 비유하자면 요청을 받는 전화기
		
			생성방법(생성자함수)
			
				ServerSocket(int port)
				
					int port	: 자신이 사용할 포트번호를 저장한다.
					
			******
			주요 함수 ]					
					
				accept()
				==> 실제로 접속을 받아주는 함수
				
					특징 ]
						1. 블로킹함수이다.( 블로킹함수의 예 : sc.nextLine();) <<뭔가 액션이 없으면 다음줄 실행안함
							누군가 접속을 해야만 실행되는 함수.
							따라서 이 함수가 실행되었다는 의미는
							누군가 ㅈ버속을 했다는 것을 의미한다. 
							이때 접속자와 통신할 전화기(소켓)을 배정해 주면 된다. 
					
						2. 이 함수는 한번 실행하면 한번만 접속 받는다. 
							따라서 여러번 접속을 원하면 이 함수가 여러번 실행되어야 하며
							서버 프로그램에서는 accept 프로그램이 반복처리 되어야 한다.
					
					
-------------------------------------------------------------------------------------------------------------------------

TCP/IP 통신 방법
	1. 요청과 응답이 1:1 로 이루어지는 경우
		==> 클라이언트가 서버에게 요청하면 서버는 응답하도록 약속된 경우
			클라이언트는 서버에게 요청한 후 받을 준비를 해야 한다.
			
	2.  요청과 응답이 1:n으로 이루어지는 경우					
		
		==> 클라이언트가 요청하지 않더라도 응답이 이루어지는 경우
		
			이런 경우는 받는 쪽 프로그램을 독립적으로 만들어야 한다.
			==> 이때 받는쪽은 다른 작업과 독립해서 병행해서 처리되어야 한다.
				즉, 다른 작업을 하는 도중에도 스스로 데이터를 서버에서 받을 수 있도록 해주어야 한다.
				==> 결론적으로 스레드로 만들어야 한다.
					
-------------------------------------------------------------------------------------------------------------------------

자바에서 UDP 통신을 하기 위한 클래스

	DatagramSocket
	==> UDP 통신을 위한 전화기에 해당하는 소켓
		
		생성 방법 ]
			1. DatagramSocket(int port)			
				==> 네트워크에 흘러다니는 데이터를 받기위한 소켓
			2. DatagramSocket()
				==>  일방적으로 상대방에게 데이터를 보내기 위한 소켓
				
		주요함수 ]
			==> UDP 통신은 내부적으로 스트림을 이용하지만
				외부적으로는 패킷을 처리해야 하기 때문에
				패킷을 주고 받는 명령(함수)가 존재한다.
				
				send(DatagramPacket p)
				==> 데이터(패킷)을 보내는 함수
				
				receive(DatagramPacket p)
				==> 데이터(패킷)를 받는 함수	
					
		DatagramPacket
		==> UDP 통신을 데이터를 주고받는 단위가 되는 패키을 만들어주는 클래스
		
			생성방법 ]
			
				1. DatagramPacket(byte[] buf, int length)
					==> 네트워크에 흘러다니는 패킷을 받기 위한 패킷
					
				2. DatagramPacket(byte[] buf, int length, InetAddress adress, int port)			
					==> 상대방에게 데이터를 보내기 위한 패킷
					
			주요함수 ]
				==> 패킷은 데이터와 상대방 정보 + 자신의 정보를 묶어놓은 포장의 역할을 한다.
				
				패킷에 있는 상대방의 정보를 알아내는 함수
				1. getAddress()
					==> 보낸 사람의 주솔르 알아내는 함수
				2. getData()
					==> 실제 데이터를 알아내는 함수
				3. getLength()
					==> 데이터의 크기를 알아내는 함수
				4. getPort() 		
					==> 포트번호를 알아내는 함수
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					